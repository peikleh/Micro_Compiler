
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3AC1CCD70244007383E47197EB13BB84'
    
_lr_action_items = {'MINUS':([3,92,110,111,113,114,115,116,129,138,],[-2,109,-48,-56,-55,-57,-47,-44,-54,-49,]),'VOID':([17,],[28,]),'ENDIF':([6,11,14,15,23,32,49,57,58,59,64,67,70,71,74,75,79,85,91,106,117,118,121,128,133,134,135,136,137,142,143,145,],[-76,-76,-6,-5,-4,-9,-7,-32,-35,-30,-29,-31,-34,-33,-76,-28,-36,-27,-40,-76,-39,-38,-76,-76,-74,-76,-66,143,-65,-76,-62,-64,]),'MULT':([3,110,111,113,114,115,116,129,138,],[-2,-48,-56,-55,-57,-47,125,-54,-49,]),'IF':([6,11,14,15,23,32,49,52,55,57,58,59,64,67,70,71,74,79,91,98,106,117,118,119,121,133,134,135,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,73,-32,-35,-30,-29,-31,-34,-33,73,-36,-40,-76,-76,-39,-38,73,73,-74,-76,-66,73,-62,]),'COMM':([3,25,37,43,47,51,92,110,111,113,114,115,116,129,131,138,144,],[-2,34,45,34,-19,45,-41,-48,-56,-55,-57,-47,-44,-54,140,-49,140,]),'FLOATLITERAL':([66,78,80,82,83,84,93,94,99,100,101,102,103,104,105,107,108,109,112,123,124,125,126,132,140,],[-76,-76,-76,-76,-43,-76,-46,114,-73,-70,-76,-72,-71,-69,-68,-42,-58,-59,-76,-76,-61,-60,-45,-43,-76,]),'FLOAT':([5,6,11,17,30,32,45,49,52,98,106,134,135,],[7,7,7,7,7,-9,7,-7,7,7,7,7,-66,]),'N_EQ':([3,89,92,110,111,113,114,115,116,129,138,],[-2,103,-41,-48,-56,-55,-57,-47,-44,-54,-49,]),'R_EQ':([3,89,92,110,111,113,114,115,116,129,138,],[-2,99,-41,-48,-56,-55,-57,-47,-44,-54,-49,]),'IDENTIFIER':([2,6,7,10,11,12,13,14,15,23,27,28,29,32,34,38,49,52,55,57,58,59,64,66,67,70,71,74,76,77,78,79,80,82,83,84,91,93,94,98,99,100,101,102,103,104,105,106,107,108,109,112,117,118,119,121,123,124,125,126,132,133,134,135,140,142,143,],[3,-76,-10,3,-76,3,-11,-6,-5,-4,-12,-13,3,-9,3,3,-7,-76,3,-32,-35,-30,-29,-76,-31,-34,-33,3,3,3,-76,-36,-76,-76,-43,-76,-40,-46,3,-76,-73,-70,-76,-72,-71,-69,-68,-76,-42,-58,-59,-76,-39,-38,3,3,-76,-61,-60,-45,-43,-74,-76,-66,-76,3,-62,]),'R_PAR':([3,25,30,33,35,37,39,40,43,44,46,47,50,51,53,86,87,88,90,92,110,111,113,114,115,116,120,122,123,129,130,131,132,138,139,141,144,146,],[-2,-76,-76,-14,-16,-76,48,-18,-76,-21,-17,-19,-15,-76,-20,96,97,98,106,-41,-48,-56,-55,-57,-47,-44,-67,129,-76,-54,138,-76,-51,-49,-50,-53,-76,-52,]),'PLUS':([3,92,110,111,113,114,115,116,129,138,],[-2,108,-48,-56,-55,-57,-47,-44,-54,-49,]),'READ':([6,11,14,15,23,32,49,52,55,57,58,59,64,67,70,71,74,79,91,98,106,117,118,119,121,133,134,135,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,61,-32,-35,-30,-29,-31,-34,-33,61,-36,-40,-76,-76,-39,-38,61,61,-74,-76,-66,61,-62,]),'STRING':([5,6,11,32,49,52,98,106,134,135,],[10,10,10,-9,-7,10,10,10,10,-66,]),'WHILE':([6,11,14,15,23,32,49,52,55,57,58,59,64,67,70,71,74,79,91,98,106,117,118,119,121,133,134,135,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,69,-32,-35,-30,-29,-31,-34,-33,69,-36,-40,-76,-76,-39,-38,69,69,-74,-76,-66,69,-62,]),'INT':([5,6,11,17,30,32,45,49,52,98,106,134,135,],[13,13,13,13,13,-9,13,-7,13,13,13,13,-66,]),'STRINGLITERAL':([31,],[42,]),'RETURN':([6,11,14,15,23,32,49,52,55,57,58,59,64,67,70,71,74,79,91,98,106,117,118,119,121,133,134,135,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,66,-32,-35,-30,-29,-31,-34,-33,66,-36,-40,-76,-76,-39,-38,66,66,-74,-76,-66,66,-62,]),'INTLITERAL':([66,78,80,82,83,84,93,94,99,100,101,102,103,104,105,107,108,109,112,123,124,125,126,132,140,],[-76,-76,-76,-76,-43,-76,-46,111,-73,-70,-76,-72,-71,-69,-68,-42,-58,-59,-76,-76,-61,-60,-45,-43,-76,]),'ENDWHILE':([6,11,14,15,23,32,49,57,58,59,64,67,70,71,74,75,79,85,91,98,117,118,119,127,133,143,],[-76,-76,-6,-5,-4,-9,-7,-32,-35,-30,-29,-31,-34,-33,-76,-28,-36,-27,-40,-76,-39,-38,-76,133,-74,-62,]),'$end':([1,21,],[0,-1,]),'L_EQ':([3,89,92,110,111,113,114,115,116,129,138,],[-2,102,-41,-48,-56,-55,-57,-47,-44,-54,-49,]),'PROGRAM':([0,],[2,]),'WRITE':([6,11,14,15,23,32,49,52,55,57,58,59,64,67,70,71,74,79,91,98,106,117,118,119,121,133,134,135,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,60,-32,-35,-30,-29,-31,-34,-33,60,-36,-40,-76,-76,-39,-38,60,60,-74,-76,-66,60,-62,]),'DIV':([3,110,111,113,114,115,116,129,138,],[-2,-48,-56,-55,-57,-47,124,-54,-49,]),'ELSE':([6,11,14,15,23,32,49,57,58,59,64,67,70,71,74,75,79,85,91,106,117,118,121,128,133,143,],[-76,-76,-6,-5,-4,-9,-7,-32,-35,-30,-29,-31,-34,-33,-76,-28,-36,-27,-40,-76,-39,-38,-76,135,-74,-62,]),'LESS':([3,89,92,110,111,113,114,115,116,129,138,],[-2,105,-41,-48,-56,-55,-57,-47,-44,-54,-49,]),'L_PAR':([3,18,36,60,61,62,65,66,69,73,78,80,82,83,84,93,94,99,100,101,102,103,104,105,107,108,109,112,113,123,124,125,126,132,140,],[-2,30,-25,76,77,78,80,-76,-75,-63,-76,-76,-76,-43,-76,-46,112,-73,-70,-76,-72,-71,-69,-68,-42,-58,-59,-76,123,-76,-61,-60,-45,-43,-76,]),'EQ_EQ':([3,22,72,],[-2,31,84,]),'SEMI':([3,24,25,33,35,41,42,43,50,63,81,92,95,96,97,110,111,113,114,115,116,129,138,],[-2,32,-76,-14,-16,49,-8,-76,-15,79,91,-41,-37,117,118,-48,-56,-55,-57,-47,-44,-54,-49,]),'FUNCTION':([5,6,8,11,14,15,16,23,32,49,56,],[-76,-76,17,-76,-6,-5,17,-4,-9,-7,-24,]),'END':([5,6,8,9,11,14,15,16,19,20,23,26,32,49,52,54,55,56,57,58,59,64,67,68,70,71,74,75,79,85,91,117,118,133,143,],[-76,-76,-76,21,-76,-6,-5,-76,-3,-23,-4,-22,-9,-7,-76,56,-76,-24,-32,-35,-30,-29,-31,-26,-34,-33,-76,-28,-36,-27,-40,-39,-38,-74,-62,]),'BEGIN':([3,4,48,],[-2,5,52,]),'EQ':([3,89,92,110,111,113,114,115,116,129,138,],[-2,100,-41,-48,-56,-55,-57,-47,-44,-54,-49,]),'MORE':([3,89,92,110,111,113,114,115,116,129,138,],[-2,104,-41,-48,-56,-55,-57,-47,-44,-54,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assign_stmt':([55,74,119,121,142,],[57,57,57,57,57,]),'return_stmt':([55,74,119,121,142,],[58,58,58,58,58,]),'factor':([82,],[92,]),'if_stmt':([55,74,119,121,142,],[59,59,59,59,59,]),'func_body':([52,],[54,]),'any_type':([17,],[29,]),'str':([31,],[41,]),'expr':([66,78,80,84,101,112,123,140,],[81,89,89,95,120,122,131,144,]),'string_decl':([5,6,11,52,98,106,134,],[11,11,11,11,11,11,11,]),'s_func':([8,16,],[18,18,]),'pgm_body':([5,],[9,]),'primary':([94,],[115,]),'else_part':([128,],[136,]),'s_if':([55,74,119,121,142,],[65,65,65,65,65,]),'expr_list':([123,],[130,]),'while_stmt':([55,74,119,121,142,],[67,67,67,67,67,]),'stmt_list':([55,74,119,121,142,],[68,85,127,128,145,]),'var_decl':([5,6,11,52,98,106,134,],[6,6,6,6,6,6,6,]),'write_stmt':([55,74,119,121,142,],[70,70,70,70,70,]),'s_else':([128,],[134,]),'factor_prefix':([82,],[94,]),'id':([2,10,12,29,34,38,55,74,76,77,94,119,121,142,],[4,22,25,36,43,47,72,72,25,25,113,72,72,72,]),'postfix_expr':([94,],[116,]),'func_decl':([8,16,],[16,16,]),'param_decl_list':([30,],[39,]),'program':([0,],[1,]),'mulop':([116,],[126,]),'call_expr':([94,],[110,]),'param_decl':([30,45,],[37,51,]),'expr_list_tail':([131,144,],[139,146,]),'s_while':([55,74,119,121,142,],[62,62,62,62,62,]),'var_type':([5,6,11,17,30,45,52,98,106,134,],[12,12,12,27,38,38,12,12,12,12,]),'assign_expr':([55,74,119,121,142,],[63,63,63,63,63,]),'decl':([5,6,11,52,98,106,134,],[8,15,23,55,119,121,142,]),'base_stmt':([55,74,119,121,142,],[64,64,64,64,64,]),'func_declarations':([8,16,],[19,26,]),'id_list':([12,76,77,],[24,86,87,]),'cond':([78,80,],[88,90,]),'compop':([89,],[101,]),'param_decl_tail':([37,51,],[46,53,]),'read_stmt':([55,74,119,121,142,],[71,71,71,71,71,]),'addop':([92,],[107,]),'id_tail':([25,43,],[33,50,]),'expr_prefix':([66,78,80,84,101,112,123,140,],[82,82,82,82,82,82,82,82,]),'stmt':([55,74,119,121,142,],[74,74,74,74,74,]),'empty':([5,6,8,11,16,25,30,37,43,51,52,55,66,74,78,80,82,84,98,101,106,112,119,121,123,128,131,134,140,142,144,],[14,14,20,14,20,35,40,44,35,44,14,75,83,75,83,83,93,83,14,83,14,83,75,75,132,137,141,14,83,75,141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM id BEGIN pgm_body END','program',5,'p_program','parser.py',18),
  ('id -> IDENTIFIER','id',1,'p_id','parser.py',21),
  ('pgm_body -> decl func_declarations','pgm_body',2,'p_pgm_body','parser.py',25),
  ('decl -> string_decl decl','decl',2,'p_decl','parser.py',28),
  ('decl -> var_decl decl','decl',2,'p_decl','parser.py',29),
  ('decl -> empty','decl',1,'p_decl','parser.py',30),
  ('string_decl -> STRING id EQ_EQ str SEMI','string_decl',5,'p_string_decl','parser.py',33),
  ('str -> STRINGLITERAL','str',1,'p_str','parser.py',37),
  ('var_decl -> var_type id_list SEMI','var_decl',3,'p_var_decl','parser.py',40),
  ('var_type -> FLOAT','var_type',1,'p_var_type','parser.py',44),
  ('var_type -> INT','var_type',1,'p_var_type','parser.py',45),
  ('any_type -> var_type','any_type',1,'p_any_type','parser.py',49),
  ('any_type -> VOID','any_type',1,'p_any_type','parser.py',50),
  ('id_list -> id id_tail','id_list',2,'p_id_list','parser.py',53),
  ('id_tail -> COMM id id_tail','id_tail',3,'p_id_tail','parser.py',58),
  ('id_tail -> empty','id_tail',1,'p_id_tail','parser.py',59),
  ('param_decl_list -> param_decl param_decl_tail','param_decl_list',2,'p_param_decl_list','parser.py',66),
  ('param_decl_list -> empty','param_decl_list',1,'p_param_decl_list','parser.py',67),
  ('param_decl -> var_type id','param_decl',2,'p_param_decl','parser.py',70),
  ('param_decl_tail -> COMM param_decl param_decl_tail','param_decl_tail',3,'p_param_decl_tail','parser.py',74),
  ('param_decl_tail -> empty','param_decl_tail',1,'p_param_decl_tail','parser.py',75),
  ('func_declarations -> func_decl func_declarations','func_declarations',2,'p_func_declarations','parser.py',78),
  ('func_declarations -> empty','func_declarations',1,'p_func_declarations','parser.py',79),
  ('func_decl -> s_func L_PAR param_decl_list R_PAR BEGIN func_body END','func_decl',7,'p_func_decl','parser.py',82),
  ('s_func -> FUNCTION any_type id','s_func',3,'p_s_func','parser.py',87),
  ('func_body -> decl stmt_list','func_body',2,'p_func_body','parser.py',91),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','parser.py',94),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','parser.py',95),
  ('stmt -> base_stmt','stmt',1,'p_stmt','parser.py',98),
  ('stmt -> if_stmt','stmt',1,'p_stmt','parser.py',99),
  ('stmt -> while_stmt','stmt',1,'p_stmt','parser.py',100),
  ('base_stmt -> assign_stmt','base_stmt',1,'p_base_stmt','parser.py',103),
  ('base_stmt -> read_stmt','base_stmt',1,'p_base_stmt','parser.py',104),
  ('base_stmt -> write_stmt','base_stmt',1,'p_base_stmt','parser.py',105),
  ('base_stmt -> return_stmt','base_stmt',1,'p_base_stmt','parser.py',106),
  ('assign_stmt -> assign_expr SEMI','assign_stmt',2,'p_assign_stmt','parser.py',109),
  ('assign_expr -> id EQ_EQ expr','assign_expr',3,'p_assign_expr','parser.py',112),
  ('read_stmt -> READ L_PAR id_list R_PAR SEMI','read_stmt',5,'p_read_stmt','parser.py',118),
  ('write_stmt -> WRITE L_PAR id_list R_PAR SEMI','write_stmt',5,'p_write_stmt','parser.py',121),
  ('return_stmt -> RETURN expr SEMI','return_stmt',3,'p_return_stmt','parser.py',124),
  ('expr -> expr_prefix factor','expr',2,'p_expr','parser.py',127),
  ('expr_prefix -> expr_prefix factor addop','expr_prefix',3,'p_expr_prefix','parser.py',135),
  ('expr_prefix -> empty','expr_prefix',1,'p_expr_prefix','parser.py',136),
  ('factor -> factor_prefix postfix_expr','factor',2,'p_factor','parser.py',147),
  ('factor_prefix -> factor_prefix postfix_expr mulop','factor_prefix',3,'p_factor_prefix','parser.py',159),
  ('factor_prefix -> empty','factor_prefix',1,'p_factor_prefix','parser.py',160),
  ('postfix_expr -> primary','postfix_expr',1,'p_postfix_expr','parser.py',170),
  ('postfix_expr -> call_expr','postfix_expr',1,'p_postfix_expr','parser.py',171),
  ('call_expr -> id L_PAR expr_list R_PAR','call_expr',4,'p_call_expr','parser.py',175),
  ('expr_list -> expr expr_list_tail','expr_list',2,'p_expr_list','parser.py',178),
  ('expr_list -> empty','expr_list',1,'p_expr_list','parser.py',179),
  ('expr_list_tail -> COMM expr expr_list_tail','expr_list_tail',3,'p_expr_list_tail','parser.py',182),
  ('expr_list_tail -> empty','expr_list_tail',1,'p_expr_list_tail','parser.py',183),
  ('primary -> L_PAR expr R_PAR','primary',3,'p_primary','parser.py',186),
  ('primary -> id','primary',1,'p_primary','parser.py',187),
  ('primary -> INTLITERAL','primary',1,'p_primary','parser.py',188),
  ('primary -> FLOATLITERAL','primary',1,'p_primary','parser.py',189),
  ('addop -> PLUS','addop',1,'p_addop','parser.py',196),
  ('addop -> MINUS','addop',1,'p_addop','parser.py',197),
  ('mulop -> MULT','mulop',1,'p_mulop','parser.py',201),
  ('mulop -> DIV','mulop',1,'p_mulop','parser.py',202),
  ('if_stmt -> s_if L_PAR cond R_PAR decl stmt_list else_part ENDIF','if_stmt',8,'p_if_stmt','parser.py',206),
  ('s_if -> IF','s_if',1,'p_s_if','parser.py',211),
  ('else_part -> s_else decl stmt_list','else_part',3,'p_else_part','parser.py',215),
  ('else_part -> empty','else_part',1,'p_else_part','parser.py',216),
  ('s_else -> ELSE','s_else',1,'p_s_else','parser.py',221),
  ('cond -> expr compop expr','cond',3,'p_cond','parser.py',225),
  ('compop -> LESS','compop',1,'p_compop','parser.py',228),
  ('compop -> MORE','compop',1,'p_compop','parser.py',229),
  ('compop -> EQ','compop',1,'p_compop','parser.py',230),
  ('compop -> N_EQ','compop',1,'p_compop','parser.py',231),
  ('compop -> L_EQ','compop',1,'p_compop','parser.py',232),
  ('compop -> R_EQ','compop',1,'p_compop','parser.py',233),
  ('while_stmt -> s_while L_PAR cond R_PAR decl stmt_list ENDWHILE','while_stmt',7,'p_while_stmt','parser.py',236),
  ('s_while -> WHILE','s_while',1,'p_s_while','parser.py',239),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',243),
]
