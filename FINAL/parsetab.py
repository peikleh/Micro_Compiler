
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '267EA190772EA3549A90D929F57230FF'
    
_lr_action_items = {'INTLITERAL':([56,76,78,80,81,82,86,88,100,103,104,105,107,108,109,110,111,112,113,117,118,119,121,130,134,],[-76,-76,-43,-76,-76,-76,96,-46,-76,-42,-58,-59,-68,-76,-73,-72,-71,-70,-69,-60,-61,-45,-76,-43,-76,]),'RETURN':([10,11,13,21,22,32,49,51,53,58,59,62,65,68,69,73,74,83,89,114,115,122,124,125,126,137,139,141,143,144,],[-76,-76,-6,-5,-4,-9,-7,-76,56,-33,-29,-35,-32,-34,56,-30,-31,-36,-40,-76,-76,-38,56,56,-39,-66,-76,-74,-62,56,]),'LESS':([3,87,91,96,97,98,99,101,102,127,133,],[-2,-41,107,-56,-44,-48,-47,-57,-55,-54,-49,]),'READ':([10,11,13,21,22,32,49,51,53,58,59,62,65,68,69,73,74,83,89,114,115,122,124,125,126,137,139,141,143,144,],[-76,-76,-6,-5,-4,-9,-7,-76,57,-33,-29,-35,-32,-34,57,-30,-31,-36,-40,-76,-76,-38,57,57,-39,-66,-76,-74,-62,57,]),'EQ_EQ':([3,20,63,],[-2,31,81,]),'STRINGLITERAL':([31,],[41,]),'WHILE':([10,11,13,21,22,32,49,51,53,58,59,62,65,68,69,73,74,83,89,114,115,122,124,125,126,137,139,141,143,144,],[-76,-76,-6,-5,-4,-9,-7,-76,60,-33,-29,-35,-32,-34,60,-30,-31,-36,-40,-76,-76,-38,60,60,-39,-66,-76,-74,-62,60,]),'PROGRAM':([0,],[2,]),'R_PAR':([3,24,30,34,35,38,39,40,43,44,46,48,50,52,55,87,90,92,94,95,96,97,98,99,101,102,120,121,123,127,128,129,130,133,135,136,142,145,],[-2,-76,-76,-16,-14,45,-76,-18,-76,-19,-17,-21,-15,-76,-20,-41,106,114,115,116,-56,-44,-48,-47,-57,-55,127,-76,-67,-54,133,-76,-51,-49,-53,-50,-76,-52,]),'DIV':([3,96,97,98,99,101,102,127,133,],[-2,-56,118,-48,-47,-57,-55,-54,-49,]),'N_EQ':([3,87,91,96,97,98,99,101,102,127,133,],[-2,-41,111,-56,-44,-48,-47,-57,-55,-54,-49,]),'MINUS':([3,87,96,97,98,99,101,102,127,133,],[-2,105,-56,-44,-48,-47,-57,-55,-54,-49,]),'MULT':([3,96,97,98,99,101,102,127,133,],[-2,-56,117,-48,-47,-57,-55,-54,-49,]),'BEGIN':([3,4,45,],[-2,5,51,]),'SEMI':([3,23,24,34,35,41,42,43,50,66,77,87,93,96,97,98,99,101,102,106,116,127,133,],[-2,32,-76,-16,-14,-8,49,-76,-15,83,89,-41,-37,-56,-44,-48,-47,-57,-55,122,126,-54,-49,]),'R_EQ':([3,87,91,96,97,98,99,101,102,127,133,],[-2,-41,109,-56,-44,-48,-47,-57,-55,-54,-49,]),'PLUS':([3,87,96,97,98,99,101,102,127,133,],[-2,104,-56,-44,-48,-47,-57,-55,-54,-49,]),'IDENTIFIER':([2,7,8,9,10,11,12,13,21,22,26,27,28,32,33,37,49,51,53,56,58,59,62,65,68,69,73,74,76,78,79,80,81,82,83,85,86,88,89,100,103,104,105,107,108,109,110,111,112,113,114,115,117,118,119,121,122,124,125,126,130,134,137,139,141,143,144,],[3,3,-11,-10,-76,-76,3,-6,-5,-4,-12,-13,3,-9,3,3,-7,-76,3,-76,-33,-29,-35,-32,-34,3,-30,-31,-76,-43,3,-76,-76,-76,-36,3,3,-46,-40,-76,-42,-58,-59,-68,-76,-73,-72,-71,-70,-69,-76,-76,-60,-61,-45,-76,-38,3,3,-39,-43,-76,-66,-76,-74,-62,3,]),'VOID':([15,],[27,]),'$end':([1,25,],[0,-1,]),'FUNCTION':([5,6,10,11,13,16,21,22,32,49,75,],[-76,15,-76,-76,-6,15,-5,-4,-9,-7,-24,]),'END':([5,6,10,11,13,14,16,17,19,21,22,29,32,49,51,53,54,58,59,62,65,67,68,69,71,73,74,75,83,84,89,122,126,141,143,],[-76,-76,-76,-76,-6,25,-76,-3,-23,-5,-4,-22,-9,-7,-76,-76,75,-33,-29,-35,-32,-28,-34,-76,-26,-30,-31,-24,-36,-27,-40,-38,-39,-74,-62,]),'STRING':([5,10,11,32,49,51,114,115,137,139,],[7,7,7,-9,-7,7,7,7,-66,7,]),'L_EQ':([3,87,91,96,97,98,99,101,102,127,133,],[-2,-41,110,-56,-44,-48,-47,-57,-55,-54,-49,]),'ELSE':([10,11,13,21,22,32,49,58,59,62,65,67,68,69,73,74,83,84,89,114,122,124,126,131,141,143,],[-76,-76,-6,-5,-4,-9,-7,-33,-29,-35,-32,-28,-34,-76,-30,-31,-36,-27,-40,-76,-38,-76,-39,137,-74,-62,]),'WRITE':([10,11,13,21,22,32,49,51,53,58,59,62,65,68,69,73,74,83,89,114,115,122,124,125,126,137,139,141,143,144,],[-76,-76,-6,-5,-4,-9,-7,-76,72,-33,-29,-35,-32,-34,72,-30,-31,-36,-40,-76,-76,-38,72,72,-39,-66,-76,-74,-62,72,]),'COMM':([3,24,39,43,44,52,87,96,97,98,99,101,102,127,129,133,142,],[-2,33,47,33,-19,47,-41,-56,-44,-48,-47,-57,-55,-54,134,-49,134,]),'ENDIF':([10,11,13,21,22,32,49,58,59,62,65,67,68,69,73,74,83,84,89,114,122,124,126,131,137,138,139,140,141,143,144,146,],[-76,-76,-6,-5,-4,-9,-7,-33,-29,-35,-32,-28,-34,-76,-30,-31,-36,-27,-40,-76,-38,-76,-39,-76,-66,143,-76,-65,-74,-62,-76,-64,]),'EQ':([3,87,91,96,97,98,99,101,102,127,133,],[-2,-41,112,-56,-44,-48,-47,-57,-55,-54,-49,]),'IF':([10,11,13,21,22,32,49,51,53,58,59,62,65,68,69,73,74,83,89,114,115,122,124,125,126,137,139,141,143,144,],[-76,-76,-6,-5,-4,-9,-7,-76,70,-33,-29,-35,-32,-34,70,-30,-31,-36,-40,-76,-76,-38,70,70,-39,-66,-76,-74,-62,70,]),'ENDWHILE':([10,11,13,21,22,32,49,58,59,62,65,67,68,69,73,74,83,84,89,115,122,125,126,132,141,143,],[-76,-76,-6,-5,-4,-9,-7,-33,-29,-35,-32,-28,-34,-76,-30,-31,-36,-27,-40,-76,-38,-76,-39,141,-74,-62,]),'INT':([5,10,11,15,30,32,47,49,51,114,115,137,139,],[8,8,8,8,8,-9,8,-7,8,8,8,-66,8,]),'FLOAT':([5,10,11,15,30,32,47,49,51,114,115,137,139,],[9,9,9,9,9,-9,9,-7,9,9,9,-66,9,]),'FLOATLITERAL':([56,76,78,80,81,82,86,88,100,103,104,105,107,108,109,110,111,112,113,117,118,119,121,130,134,],[-76,-76,-43,-76,-76,-76,101,-46,-76,-42,-58,-59,-68,-76,-73,-72,-71,-70,-69,-60,-61,-45,-76,-43,-76,]),'L_PAR':([3,18,36,56,57,60,61,64,70,72,76,78,80,81,82,86,88,100,102,103,104,105,107,108,109,110,111,112,113,117,118,119,121,130,134,],[-2,30,-25,-76,79,-75,80,82,-63,85,-76,-43,-76,-76,-76,100,-46,-76,121,-42,-58,-59,-68,-76,-73,-72,-71,-70,-69,-60,-61,-45,-76,-43,-76,]),'MORE':([3,87,91,96,97,98,99,101,102,127,133,],[-2,-41,113,-56,-44,-48,-47,-57,-55,-54,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([5,10,11,51,114,115,139,],[6,21,22,53,124,125,144,]),'var_type':([5,10,11,15,30,47,51,114,115,139,],[12,12,12,26,37,37,12,12,12,12,]),'expr_list':([121,],[128,]),'param_decl_list':([30,],[38,]),'read_stmt':([53,69,124,125,144,],[58,58,58,58,58,]),'primary':([86,],[99,]),'id_tail':([24,43,],[35,50,]),'id_list':([12,79,85,],[23,90,95,]),'s_if':([53,69,124,125,144,],[61,61,61,61,61,]),'return_stmt':([53,69,124,125,144,],[62,62,62,62,62,]),'string_decl':([5,10,11,51,114,115,139,],[11,11,11,11,11,11,11,]),'expr_list_tail':([129,142,],[136,145,]),'s_func':([6,16,],[18,18,]),'s_else':([131,],[139,]),'id':([2,7,12,28,33,37,53,69,79,85,86,124,125,144,],[4,20,24,36,43,44,63,63,24,24,102,63,63,63,]),'postfix_expr':([86,],[97,]),'s_while':([53,69,124,125,144,],[64,64,64,64,64,]),'factor_prefix':([76,],[86,]),'compop':([91,],[108,]),'assign_stmt':([53,69,124,125,144,],[65,65,65,65,65,]),'param_decl_tail':([39,52,],[46,55,]),'program':([0,],[1,]),'assign_expr':([53,69,124,125,144,],[66,66,66,66,66,]),'factor':([76,],[87,]),'empty':([5,6,10,11,16,24,30,39,43,51,52,53,56,69,76,80,81,82,100,108,114,115,121,124,125,129,131,134,139,142,144,],[13,19,13,13,19,34,40,48,34,13,48,67,78,67,88,78,78,78,78,78,13,13,130,67,67,135,140,78,13,135,67,]),'write_stmt':([53,69,124,125,144,],[68,68,68,68,68,]),'addop':([87,],[103,]),'func_decl':([6,16,],[16,16,]),'mulop':([97,],[119,]),'call_expr':([86,],[98,]),'stmt':([53,69,124,125,144,],[69,69,69,69,69,]),'func_declarations':([6,16,],[17,29,]),'else_part':([131,],[138,]),'any_type':([15,],[28,]),'param_decl':([30,47,],[39,52,]),'pgm_body':([5,],[14,]),'stmt_list':([53,69,124,125,144,],[71,84,131,132,146,]),'if_stmt':([53,69,124,125,144,],[73,73,73,73,73,]),'base_stmt':([53,69,124,125,144,],[59,59,59,59,59,]),'func_body':([51,],[54,]),'expr':([56,80,81,82,100,108,121,134,],[77,91,93,91,120,123,129,142,]),'expr_prefix':([56,80,81,82,100,108,121,134,],[76,76,76,76,76,76,76,76,]),'var_decl':([5,10,11,51,114,115,139,],[10,10,10,10,10,10,10,]),'while_stmt':([53,69,124,125,144,],[74,74,74,74,74,]),'str':([31,],[42,]),'cond':([80,82,],[92,94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM id BEGIN pgm_body END','program',5,'p_program','parser.py',18),
  ('id -> IDENTIFIER','id',1,'p_id','parser.py',21),
  ('pgm_body -> decl func_declarations','pgm_body',2,'p_pgm_body','parser.py',25),
  ('decl -> string_decl decl','decl',2,'p_decl','parser.py',28),
  ('decl -> var_decl decl','decl',2,'p_decl','parser.py',29),
  ('decl -> empty','decl',1,'p_decl','parser.py',30),
  ('string_decl -> STRING id EQ_EQ str SEMI','string_decl',5,'p_string_decl','parser.py',33),
  ('str -> STRINGLITERAL','str',1,'p_str','parser.py',37),
  ('var_decl -> var_type id_list SEMI','var_decl',3,'p_var_decl','parser.py',40),
  ('var_type -> FLOAT','var_type',1,'p_var_type','parser.py',44),
  ('var_type -> INT','var_type',1,'p_var_type','parser.py',45),
  ('any_type -> var_type','any_type',1,'p_any_type','parser.py',49),
  ('any_type -> VOID','any_type',1,'p_any_type','parser.py',50),
  ('id_list -> id id_tail','id_list',2,'p_id_list','parser.py',53),
  ('id_tail -> COMM id id_tail','id_tail',3,'p_id_tail','parser.py',58),
  ('id_tail -> empty','id_tail',1,'p_id_tail','parser.py',59),
  ('param_decl_list -> param_decl param_decl_tail','param_decl_list',2,'p_param_decl_list','parser.py',66),
  ('param_decl_list -> empty','param_decl_list',1,'p_param_decl_list','parser.py',67),
  ('param_decl -> var_type id','param_decl',2,'p_param_decl','parser.py',70),
  ('param_decl_tail -> COMM param_decl param_decl_tail','param_decl_tail',3,'p_param_decl_tail','parser.py',74),
  ('param_decl_tail -> empty','param_decl_tail',1,'p_param_decl_tail','parser.py',75),
  ('func_declarations -> func_decl func_declarations','func_declarations',2,'p_func_declarations','parser.py',78),
  ('func_declarations -> empty','func_declarations',1,'p_func_declarations','parser.py',79),
  ('func_decl -> s_func L_PAR param_decl_list R_PAR BEGIN func_body END','func_decl',7,'p_func_decl','parser.py',82),
  ('s_func -> FUNCTION any_type id','s_func',3,'p_s_func','parser.py',87),
  ('func_body -> decl stmt_list','func_body',2,'p_func_body','parser.py',91),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','parser.py',94),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','parser.py',95),
  ('stmt -> base_stmt','stmt',1,'p_stmt','parser.py',98),
  ('stmt -> if_stmt','stmt',1,'p_stmt','parser.py',99),
  ('stmt -> while_stmt','stmt',1,'p_stmt','parser.py',100),
  ('base_stmt -> assign_stmt','base_stmt',1,'p_base_stmt','parser.py',103),
  ('base_stmt -> read_stmt','base_stmt',1,'p_base_stmt','parser.py',104),
  ('base_stmt -> write_stmt','base_stmt',1,'p_base_stmt','parser.py',105),
  ('base_stmt -> return_stmt','base_stmt',1,'p_base_stmt','parser.py',106),
  ('assign_stmt -> assign_expr SEMI','assign_stmt',2,'p_assign_stmt','parser.py',109),
  ('assign_expr -> id EQ_EQ expr','assign_expr',3,'p_assign_expr','parser.py',112),
  ('read_stmt -> READ L_PAR id_list R_PAR SEMI','read_stmt',5,'p_read_stmt','parser.py',118),
  ('write_stmt -> WRITE L_PAR id_list R_PAR SEMI','write_stmt',5,'p_write_stmt','parser.py',121),
  ('return_stmt -> RETURN expr SEMI','return_stmt',3,'p_return_stmt','parser.py',124),
  ('expr -> expr_prefix factor','expr',2,'p_expr','parser.py',127),
  ('expr_prefix -> expr_prefix factor addop','expr_prefix',3,'p_expr_prefix','parser.py',136),
  ('expr_prefix -> empty','expr_prefix',1,'p_expr_prefix','parser.py',137),
  ('factor -> factor_prefix postfix_expr','factor',2,'p_factor','parser.py',148),
  ('factor_prefix -> factor_prefix postfix_expr mulop','factor_prefix',3,'p_factor_prefix','parser.py',161),
  ('factor_prefix -> empty','factor_prefix',1,'p_factor_prefix','parser.py',162),
  ('postfix_expr -> primary','postfix_expr',1,'p_postfix_expr','parser.py',170),
  ('postfix_expr -> call_expr','postfix_expr',1,'p_postfix_expr','parser.py',171),
  ('call_expr -> id L_PAR expr_list R_PAR','call_expr',4,'p_call_expr','parser.py',175),
  ('expr_list -> expr expr_list_tail','expr_list',2,'p_expr_list','parser.py',178),
  ('expr_list -> empty','expr_list',1,'p_expr_list','parser.py',179),
  ('expr_list_tail -> COMM expr expr_list_tail','expr_list_tail',3,'p_expr_list_tail','parser.py',182),
  ('expr_list_tail -> empty','expr_list_tail',1,'p_expr_list_tail','parser.py',183),
  ('primary -> L_PAR expr R_PAR','primary',3,'p_primary','parser.py',186),
  ('primary -> id','primary',1,'p_primary','parser.py',187),
  ('primary -> INTLITERAL','primary',1,'p_primary','parser.py',188),
  ('primary -> FLOATLITERAL','primary',1,'p_primary','parser.py',189),
  ('addop -> PLUS','addop',1,'p_addop','parser.py',195),
  ('addop -> MINUS','addop',1,'p_addop','parser.py',196),
  ('mulop -> MULT','mulop',1,'p_mulop','parser.py',200),
  ('mulop -> DIV','mulop',1,'p_mulop','parser.py',201),
  ('if_stmt -> s_if L_PAR cond R_PAR decl stmt_list else_part ENDIF','if_stmt',8,'p_if_stmt','parser.py',205),
  ('s_if -> IF','s_if',1,'p_s_if','parser.py',210),
  ('else_part -> s_else decl stmt_list','else_part',3,'p_else_part','parser.py',214),
  ('else_part -> empty','else_part',1,'p_else_part','parser.py',215),
  ('s_else -> ELSE','s_else',1,'p_s_else','parser.py',220),
  ('cond -> expr compop expr','cond',3,'p_cond','parser.py',224),
  ('compop -> LESS','compop',1,'p_compop','parser.py',227),
  ('compop -> MORE','compop',1,'p_compop','parser.py',228),
  ('compop -> EQ','compop',1,'p_compop','parser.py',229),
  ('compop -> N_EQ','compop',1,'p_compop','parser.py',230),
  ('compop -> L_EQ','compop',1,'p_compop','parser.py',231),
  ('compop -> R_EQ','compop',1,'p_compop','parser.py',232),
  ('while_stmt -> s_while L_PAR cond R_PAR decl stmt_list ENDWHILE','while_stmt',7,'p_while_stmt','parser.py',235),
  ('s_while -> WHILE','s_while',1,'p_s_while','parser.py',238),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',242),
]
