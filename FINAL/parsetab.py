
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E9E8BBE862AC639FEBF1049764A8C4D1'
    
_lr_action_items = {'ENDIF':([7,12,14,15,24,34,50,56,57,58,59,64,67,71,73,74,76,85,94,103,118,119,126,127,133,134,135,136,137,142,143,145,],[-76,-76,-6,-5,-4,-9,-7,-30,-31,-34,-76,-28,-29,-35,-33,-32,-27,-36,-40,-76,-76,-39,-38,-76,142,-66,-76,-65,-74,-62,-76,-64,]),'INT':([5,7,12,18,26,34,44,50,52,103,105,134,135,],[6,6,6,6,6,-9,6,-7,6,6,6,-66,6,]),'WRITE':([7,12,14,15,24,34,50,52,54,56,57,58,59,67,71,73,74,85,94,103,105,118,119,120,126,134,135,137,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,63,-30,-31,-34,63,-29,-35,-33,-32,-36,-40,-76,-76,63,-39,63,-38,-66,-76,-74,-62,63,]),'$end':([2,25,],[0,-1,]),'DIV':([4,106,107,108,109,110,112,129,141,],[-2,-56,-47,-48,121,-57,-55,-54,-49,]),'SEMI':([4,21,22,31,32,41,42,43,49,72,82,88,92,104,106,107,108,109,110,112,116,129,141,],[-2,-76,34,-14,-16,-76,-8,50,-15,85,94,-37,-41,119,-56,-47,-48,-44,-57,-55,126,-54,-49,]),'FLOATLITERAL':([69,77,78,80,81,83,91,93,96,97,98,99,100,101,102,111,113,114,115,121,122,123,125,132,138,],[-76,-76,-76,-76,-76,-43,110,-46,-72,-76,-68,-71,-70,-73,-69,-76,-59,-58,-42,-61,-45,-60,-76,-43,-76,]),'R_EQ':([4,86,92,106,107,108,109,110,112,129,141,],[-2,101,-41,-56,-47,-48,-44,-57,-55,-54,-49,]),'PLUS':([4,92,106,107,108,109,110,112,129,141,],[-2,114,-56,-47,-48,-44,-57,-55,-54,-49,]),'PROGRAM':([0,],[1,]),'L_EQ':([4,86,92,106,107,108,109,110,112,129,141,],[-2,96,-41,-56,-47,-48,-44,-57,-55,-54,-49,]),'LESS':([4,86,92,106,107,108,109,110,112,129,141,],[-2,98,-41,-56,-47,-48,-44,-57,-55,-54,-49,]),'END':([5,7,8,12,13,14,15,17,19,20,24,27,34,50,52,54,55,56,57,58,59,60,64,67,71,73,74,75,76,85,94,119,126,137,142,],[-76,-76,-76,-76,25,-6,-5,-76,-3,-23,-4,-22,-9,-7,-76,-76,75,-30,-31,-34,-76,-26,-28,-29,-35,-33,-32,-24,-27,-36,-40,-39,-38,-74,-62,]),'VOID':([18,],[28,]),'L_PAR':([4,16,40,61,63,65,66,68,69,70,77,78,80,81,83,91,93,96,97,98,99,100,101,102,111,112,113,114,115,121,122,123,125,132,138,],[-2,26,-25,77,79,-63,80,-75,-76,84,-76,-76,-76,-76,-43,111,-46,-72,-76,-68,-71,-70,-73,-69,-76,125,-59,-58,-42,-61,-45,-60,-76,-43,-76,]),'EQ':([4,86,92,106,107,108,109,110,112,129,141,],[-2,100,-41,-56,-47,-48,-44,-57,-55,-54,-49,]),'READ':([7,12,14,15,24,34,50,52,54,56,57,58,59,67,71,73,74,85,94,103,105,118,119,120,126,134,135,137,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,70,-30,-31,-34,70,-29,-35,-33,-32,-36,-40,-76,-76,70,-39,70,-38,-66,-76,-74,-62,70,]),'EQ_EQ':([4,23,62,],[-2,35,78,]),'MINUS':([4,92,106,107,108,109,110,112,129,141,],[-2,113,-56,-47,-48,-44,-57,-55,-54,-49,]),'IDENTIFIER':([1,6,7,9,10,11,12,14,15,24,28,29,30,33,34,37,50,52,54,56,57,58,59,67,69,71,73,74,77,78,79,80,81,83,84,85,91,93,94,96,97,98,99,100,101,102,103,105,111,113,114,115,118,119,120,121,122,123,125,126,132,134,135,137,138,142,143,],[4,-11,-76,-10,4,4,-76,-6,-5,-4,-13,4,-12,4,-9,4,-7,-76,4,-30,-31,-34,4,-29,-76,-35,-33,-32,-76,-76,4,-76,-76,-43,4,-36,4,-46,-40,-72,-76,-68,-71,-70,-73,-69,-76,-76,-76,-59,-58,-42,4,-39,4,-61,-45,-60,-76,-38,-43,-66,-76,-74,-76,-62,4,]),'INTLITERAL':([69,77,78,80,81,83,91,93,96,97,98,99,100,101,102,111,113,114,115,121,122,123,125,132,138,],[-76,-76,-76,-76,-76,-43,106,-46,-72,-76,-68,-71,-70,-73,-69,-76,-59,-58,-42,-61,-45,-60,-76,-43,-76,]),'IF':([7,12,14,15,24,34,50,52,54,56,57,58,59,67,71,73,74,85,94,103,105,118,119,120,126,134,135,137,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,65,-30,-31,-34,65,-29,-35,-33,-32,-36,-40,-76,-76,65,-39,65,-38,-66,-76,-74,-62,65,]),'BEGIN':([3,4,48,],[5,-2,52,]),'COMM':([4,21,36,41,47,51,92,106,107,108,109,110,112,129,130,141,144,],[-2,33,44,33,-19,44,-41,-56,-47,-48,-44,-57,-55,-54,138,-49,138,]),'STRINGLITERAL':([35,],[42,]),'FLOAT':([5,7,12,18,26,34,44,50,52,103,105,134,135,],[9,9,9,9,9,-9,9,-7,9,9,9,-66,9,]),'WHILE':([7,12,14,15,24,34,50,52,54,56,57,58,59,67,71,73,74,85,94,103,105,118,119,120,126,134,135,137,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,68,-30,-31,-34,68,-29,-35,-33,-32,-36,-40,-76,-76,68,-39,68,-38,-66,-76,-74,-62,68,]),'RETURN':([7,12,14,15,24,34,50,52,54,56,57,58,59,67,71,73,74,85,94,103,105,118,119,120,126,134,135,137,142,143,],[-76,-76,-6,-5,-4,-9,-7,-76,69,-30,-31,-34,69,-29,-35,-33,-32,-36,-40,-76,-76,69,-39,69,-38,-66,-76,-74,-62,69,]),'ENDWHILE':([7,12,14,15,24,34,50,56,57,58,59,64,67,71,73,74,76,85,94,105,119,120,126,128,137,142,],[-76,-76,-6,-5,-4,-9,-7,-30,-31,-34,-76,-28,-29,-35,-33,-32,-27,-36,-40,-76,-39,-76,-38,137,-74,-62,]),'STRING':([5,7,12,34,50,52,103,105,134,135,],[11,11,11,-9,-7,11,11,11,-66,11,]),'FUNCTION':([5,7,8,12,14,15,17,24,34,50,75,],[-76,-76,18,-76,-6,-5,18,-4,-9,-7,-24,]),'N_EQ':([4,86,92,106,107,108,109,110,112,129,141,],[-2,99,-41,-56,-47,-48,-44,-57,-55,-54,-49,]),'R_PAR':([4,21,26,31,32,36,38,39,41,45,46,47,49,51,53,87,89,90,92,95,106,107,108,109,110,112,117,124,125,129,130,131,132,139,140,141,144,146,],[-2,-76,-76,-14,-16,-76,48,-18,-76,-17,-21,-19,-15,-76,-20,103,104,105,-41,116,-56,-47,-48,-44,-57,-55,-67,129,-76,-54,-76,141,-51,-50,-53,-49,-76,-52,]),'ELSE':([7,12,14,15,24,34,50,56,57,58,59,64,67,71,73,74,76,85,94,103,118,119,126,127,137,142,],[-76,-76,-6,-5,-4,-9,-7,-30,-31,-34,-76,-28,-29,-35,-33,-32,-27,-36,-40,-76,-76,-39,-38,134,-74,-62,]),'MORE':([4,86,92,106,107,108,109,110,112,129,141,],[-2,102,-41,-56,-47,-48,-44,-57,-55,-54,-49,]),'MULT':([4,106,107,108,109,110,112,129,141,],[-2,-56,-47,-48,123,-57,-55,-54,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_prefix':([69,77,78,80,97,111,125,138,],[81,81,81,81,81,81,81,81,]),'write_stmt':([54,59,118,120,143,],[58,58,58,58,58,]),'stmt':([54,59,118,120,143,],[59,59,59,59,59,]),'expr':([69,77,78,80,97,111,125,138,],[82,86,88,86,117,124,130,144,]),'stmt_list':([54,59,118,120,143,],[60,76,127,128,145,]),'expr_list_tail':([130,144,],[139,146,]),'cond':([77,80,],[87,90,]),'s_func':([8,17,],[16,16,]),'func_decl':([8,17,],[17,17,]),'param_decl_list':([26,],[38,]),'string_decl':([5,7,12,52,103,105,135,],[12,12,12,12,12,12,12,]),'id':([1,10,11,29,33,37,54,59,79,84,91,118,120,143,],[3,21,23,40,41,47,62,62,21,21,112,62,62,62,]),'any_type':([18,],[29,]),'pgm_body':([5,],[13,]),'call_expr':([91,],[108,]),'s_while':([54,59,118,120,143,],[66,66,66,66,66,]),'compop':([86,],[97,]),'factor_prefix':([81,],[91,]),'return_stmt':([54,59,118,120,143,],[71,71,71,71,71,]),'func_body':([52,],[55,]),'postfix_expr':([91,],[109,]),'read_stmt':([54,59,118,120,143,],[73,73,73,73,73,]),'if_stmt':([54,59,118,120,143,],[56,56,56,56,56,]),'while_stmt':([54,59,118,120,143,],[57,57,57,57,57,]),'id_tail':([21,41,],[31,49,]),'param_decl_tail':([36,51,],[45,53,]),'factor':([81,],[92,]),'s_if':([54,59,118,120,143,],[61,61,61,61,61,]),'param_decl':([26,44,],[36,51,]),'var_type':([5,7,12,18,26,44,52,103,105,135,],[10,10,10,30,37,37,10,10,10,10,]),'else_part':([127,],[133,]),'mulop':([109,],[122,]),'func_declarations':([8,17,],[19,27,]),'var_decl':([5,7,12,52,103,105,135,],[7,7,7,7,7,7,7,]),'addop':([92,],[115,]),'expr_list':([125,],[131,]),'program':([0,],[2,]),'empty':([5,7,8,12,17,21,26,36,41,51,52,54,59,69,77,78,80,81,97,103,105,111,118,120,125,127,130,135,138,143,144,],[14,14,20,14,20,32,39,46,32,46,14,64,64,83,83,83,83,93,83,14,14,83,64,64,132,136,140,14,83,64,140,]),'primary':([91,],[107,]),'base_stmt':([54,59,118,120,143,],[67,67,67,67,67,]),'decl':([5,7,12,52,103,105,135,],[8,15,24,54,118,120,143,]),'s_else':([127,],[135,]),'str':([35,],[43,]),'id_list':([10,79,84,],[22,89,95,]),'assign_expr':([54,59,118,120,143,],[72,72,72,72,72,]),'assign_stmt':([54,59,118,120,143,],[74,74,74,74,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM id BEGIN pgm_body END','program',5,'p_program','parser.py',18),
  ('id -> IDENTIFIER','id',1,'p_id','parser.py',21),
  ('pgm_body -> decl func_declarations','pgm_body',2,'p_pgm_body','parser.py',25),
  ('decl -> string_decl decl','decl',2,'p_decl','parser.py',28),
  ('decl -> var_decl decl','decl',2,'p_decl','parser.py',29),
  ('decl -> empty','decl',1,'p_decl','parser.py',30),
  ('string_decl -> STRING id EQ_EQ str SEMI','string_decl',5,'p_string_decl','parser.py',33),
  ('str -> STRINGLITERAL','str',1,'p_str','parser.py',37),
  ('var_decl -> var_type id_list SEMI','var_decl',3,'p_var_decl','parser.py',40),
  ('var_type -> FLOAT','var_type',1,'p_var_type','parser.py',44),
  ('var_type -> INT','var_type',1,'p_var_type','parser.py',45),
  ('any_type -> var_type','any_type',1,'p_any_type','parser.py',49),
  ('any_type -> VOID','any_type',1,'p_any_type','parser.py',50),
  ('id_list -> id id_tail','id_list',2,'p_id_list','parser.py',53),
  ('id_tail -> COMM id id_tail','id_tail',3,'p_id_tail','parser.py',58),
  ('id_tail -> empty','id_tail',1,'p_id_tail','parser.py',59),
  ('param_decl_list -> param_decl param_decl_tail','param_decl_list',2,'p_param_decl_list','parser.py',66),
  ('param_decl_list -> empty','param_decl_list',1,'p_param_decl_list','parser.py',67),
  ('param_decl -> var_type id','param_decl',2,'p_param_decl','parser.py',70),
  ('param_decl_tail -> COMM param_decl param_decl_tail','param_decl_tail',3,'p_param_decl_tail','parser.py',74),
  ('param_decl_tail -> empty','param_decl_tail',1,'p_param_decl_tail','parser.py',75),
  ('func_declarations -> func_decl func_declarations','func_declarations',2,'p_func_declarations','parser.py',78),
  ('func_declarations -> empty','func_declarations',1,'p_func_declarations','parser.py',79),
  ('func_decl -> s_func L_PAR param_decl_list R_PAR BEGIN func_body END','func_decl',7,'p_func_decl','parser.py',82),
  ('s_func -> FUNCTION any_type id','s_func',3,'p_s_func','parser.py',87),
  ('func_body -> decl stmt_list','func_body',2,'p_func_body','parser.py',91),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','parser.py',94),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','parser.py',95),
  ('stmt -> base_stmt','stmt',1,'p_stmt','parser.py',98),
  ('stmt -> if_stmt','stmt',1,'p_stmt','parser.py',99),
  ('stmt -> while_stmt','stmt',1,'p_stmt','parser.py',100),
  ('base_stmt -> assign_stmt','base_stmt',1,'p_base_stmt','parser.py',103),
  ('base_stmt -> read_stmt','base_stmt',1,'p_base_stmt','parser.py',104),
  ('base_stmt -> write_stmt','base_stmt',1,'p_base_stmt','parser.py',105),
  ('base_stmt -> return_stmt','base_stmt',1,'p_base_stmt','parser.py',106),
  ('assign_stmt -> assign_expr SEMI','assign_stmt',2,'p_assign_stmt','parser.py',109),
  ('assign_expr -> id EQ_EQ expr','assign_expr',3,'p_assign_expr','parser.py',112),
  ('read_stmt -> READ L_PAR id_list R_PAR SEMI','read_stmt',5,'p_read_stmt','parser.py',118),
  ('write_stmt -> WRITE L_PAR id_list R_PAR SEMI','write_stmt',5,'p_write_stmt','parser.py',121),
  ('return_stmt -> RETURN expr SEMI','return_stmt',3,'p_return_stmt','parser.py',124),
  ('expr -> expr_prefix factor','expr',2,'p_expr','parser.py',127),
  ('expr_prefix -> expr_prefix factor addop','expr_prefix',3,'p_expr_prefix','parser.py',136),
  ('expr_prefix -> empty','expr_prefix',1,'p_expr_prefix','parser.py',137),
  ('factor -> factor_prefix postfix_expr','factor',2,'p_factor','parser.py',148),
  ('factor_prefix -> factor_prefix postfix_expr mulop','factor_prefix',3,'p_factor_prefix','parser.py',161),
  ('factor_prefix -> empty','factor_prefix',1,'p_factor_prefix','parser.py',162),
  ('postfix_expr -> primary','postfix_expr',1,'p_postfix_expr','parser.py',170),
  ('postfix_expr -> call_expr','postfix_expr',1,'p_postfix_expr','parser.py',171),
  ('call_expr -> id L_PAR expr_list R_PAR','call_expr',4,'p_call_expr','parser.py',175),
  ('expr_list -> expr expr_list_tail','expr_list',2,'p_expr_list','parser.py',178),
  ('expr_list -> empty','expr_list',1,'p_expr_list','parser.py',179),
  ('expr_list_tail -> COMM expr expr_list_tail','expr_list_tail',3,'p_expr_list_tail','parser.py',182),
  ('expr_list_tail -> empty','expr_list_tail',1,'p_expr_list_tail','parser.py',183),
  ('primary -> L_PAR expr R_PAR','primary',3,'p_primary','parser.py',186),
  ('primary -> id','primary',1,'p_primary','parser.py',187),
  ('primary -> INTLITERAL','primary',1,'p_primary','parser.py',188),
  ('primary -> FLOATLITERAL','primary',1,'p_primary','parser.py',189),
  ('addop -> PLUS','addop',1,'p_addop','parser.py',195),
  ('addop -> MINUS','addop',1,'p_addop','parser.py',196),
  ('mulop -> MULT','mulop',1,'p_mulop','parser.py',200),
  ('mulop -> DIV','mulop',1,'p_mulop','parser.py',201),
  ('if_stmt -> s_if L_PAR cond R_PAR decl stmt_list else_part ENDIF','if_stmt',8,'p_if_stmt','parser.py',205),
  ('s_if -> IF','s_if',1,'p_s_if','parser.py',210),
  ('else_part -> s_else decl stmt_list','else_part',3,'p_else_part','parser.py',214),
  ('else_part -> empty','else_part',1,'p_else_part','parser.py',215),
  ('s_else -> ELSE','s_else',1,'p_s_else','parser.py',220),
  ('cond -> expr compop expr','cond',3,'p_cond','parser.py',224),
  ('compop -> LESS','compop',1,'p_compop','parser.py',227),
  ('compop -> MORE','compop',1,'p_compop','parser.py',228),
  ('compop -> EQ','compop',1,'p_compop','parser.py',229),
  ('compop -> N_EQ','compop',1,'p_compop','parser.py',230),
  ('compop -> L_EQ','compop',1,'p_compop','parser.py',231),
  ('compop -> R_EQ','compop',1,'p_compop','parser.py',232),
  ('while_stmt -> s_while L_PAR cond R_PAR decl stmt_list ENDWHILE','while_stmt',7,'p_while_stmt','parser.py',235),
  ('s_while -> WHILE','s_while',1,'p_s_while','parser.py',238),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',242),
]
