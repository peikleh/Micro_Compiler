
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'FF93C8F83B0F610980F4485E603D9236'
    
_lr_action_items = {'VOID':([17,],[25,]),'LESS':([81,89,101,103,104,105,106,107,124,135,],[94,-38,-41,-53,-45,-44,-52,-54,-51,-46,]),'MORE':([81,89,101,103,104,105,106,107,124,135,],[92,-38,-41,-53,-45,-44,-52,-54,-51,-46,]),'MULT':([101,103,104,105,106,107,124,135,],[117,-53,-45,-44,-52,-54,-51,-46,]),'ENDIF':([6,10,12,18,21,29,37,54,55,56,57,59,62,65,68,69,72,73,86,99,114,115,121,123,128,129,130,131,136,137,139,],[-70,-5,-70,-4,-3,-7,-6,-31,-70,-25,-27,-32,-29,-26,-28,-30,-24,-33,-37,-70,-70,-35,-36,-70,-69,-70,137,-61,-70,-59,-60,]),'IF':([6,10,12,18,21,29,37,48,50,54,55,57,59,62,65,68,69,73,86,98,99,113,114,115,121,128,129,136,137,],[-70,-5,-70,-4,-3,-7,-6,-70,61,-31,61,-27,-32,-29,-26,-28,-30,-33,-37,-70,-70,61,61,-35,-36,-69,-70,61,-59,]),'STRING':([4,6,12,29,37,48,98,99,129,],[7,7,7,-7,-6,7,7,7,7,]),'INT':([4,6,12,17,29,36,37,45,48,98,99,129,],[8,8,8,8,-7,8,-6,8,8,8,8,8,]),'PLUS':([89,101,103,104,105,106,107,124,135,],[110,-41,-53,-45,-44,-52,-54,-51,-46,]),'STRINGLITERAL':([28,],[34,]),'R_EQ':([81,89,101,103,104,105,106,107,124,135,],[91,-38,-41,-53,-45,-44,-52,-54,-51,-46,]),'ENDWHILE':([6,10,12,18,21,29,37,54,55,56,57,59,62,65,68,69,72,73,86,98,113,115,121,122,128,137,],[-70,-5,-70,-4,-3,-7,-6,-31,-70,-25,-27,-32,-29,-26,-28,-30,-24,-33,-37,-70,-70,-35,-36,128,-69,-59,]),'SEMI':([22,23,30,32,34,35,38,58,77,83,89,100,101,103,104,105,106,107,111,124,135,],[29,-70,-14,-12,37,-70,-13,73,86,-34,-38,115,-41,-53,-45,-44,-52,-54,121,-51,-46,]),'EQ_EQ':([19,60,],[28,74,]),'IDENTIFIER':([2,6,7,8,10,11,12,13,18,21,25,26,27,29,31,37,41,48,50,54,55,57,59,62,65,66,68,69,71,73,74,75,76,78,79,80,86,87,88,91,92,93,94,95,96,97,98,99,102,108,109,110,113,114,115,116,117,118,120,121,127,128,129,134,136,137,],[3,-70,19,-9,-5,-8,-70,23,-4,-3,-11,33,-10,-7,35,-6,44,-70,60,-31,60,-27,-32,-29,-26,-70,-28,-30,-70,-33,-70,-70,23,-40,-70,23,-37,-43,106,-68,-64,-66,-63,-67,-70,-65,-70,-70,-70,-56,-39,-55,60,60,-35,-42,-57,-58,-70,-36,-40,-69,-70,-70,60,-59,]),'FLOATLITERAL':([66,71,74,75,78,79,87,88,91,92,93,94,95,96,97,102,108,109,110,116,117,118,120,127,134,],[-70,-70,-70,-70,-40,-70,-43,107,-68,-64,-66,-63,-67,-70,-65,-70,-56,-39,-55,-42,-57,-58,-70,-40,-70,]),'DIV':([101,103,104,105,106,107,124,135,],[118,-53,-45,-44,-52,-54,-51,-46,]),'ELSE':([6,10,12,18,21,29,37,54,55,56,57,59,62,65,68,69,72,73,86,99,114,115,121,123,128,137,],[-70,-5,-70,-4,-3,-7,-6,-31,-70,-25,-27,-32,-29,-26,-28,-30,-24,-33,-37,-70,-70,-35,-36,129,-69,-59,]),'RETURN':([6,10,12,18,21,29,37,48,50,54,55,57,59,62,65,68,69,73,86,98,99,113,114,115,121,128,129,136,137,],[-70,-5,-70,-4,-3,-7,-6,-70,66,-31,66,-27,-32,-29,-26,-28,-30,-33,-37,-70,-70,66,66,-35,-36,-69,-70,66,-59,]),'WHILE':([6,10,12,18,21,29,37,48,50,54,55,57,59,62,65,68,69,73,86,98,99,113,114,115,121,128,129,136,137,],[-70,-5,-70,-4,-3,-7,-6,-70,53,-31,53,-27,-32,-29,-26,-28,-30,-33,-37,-70,-70,53,53,-35,-36,-69,-70,53,-59,]),'L_PAR':([33,53,61,64,66,67,71,74,75,78,79,87,88,91,92,93,94,95,96,97,102,106,108,109,110,116,117,118,120,127,134,],[36,71,75,76,-70,80,-70,-70,-70,-40,-70,-43,102,-68,-64,-66,-63,-67,-70,-65,-70,120,-56,-39,-55,-42,-57,-58,-70,-40,-70,]),'END':([4,5,6,9,10,12,14,15,16,18,21,24,29,37,48,50,51,54,55,56,57,59,62,63,65,68,69,70,72,73,86,115,121,128,137,],[-70,-70,-70,20,-5,-70,-21,-70,-2,-4,-3,-20,-7,-6,-70,-70,70,-31,-70,-25,-27,-32,-29,-23,-26,-28,-30,-22,-24,-33,-37,-35,-36,-69,-59,]),'READ':([6,10,12,18,21,29,37,48,50,54,55,57,59,62,65,68,69,73,86,98,99,113,114,115,121,128,129,136,137,],[-70,-5,-70,-4,-3,-7,-6,-70,64,-31,64,-27,-32,-29,-26,-28,-30,-33,-37,-70,-70,64,64,-35,-36,-69,-70,64,-59,]),'N_EQ':([81,89,101,103,104,105,106,107,124,135,],[93,-38,-41,-53,-45,-44,-52,-54,-51,-46,]),'EQ':([81,89,101,103,104,105,106,107,124,135,],[97,-38,-41,-53,-45,-44,-52,-54,-51,-46,]),'PROGRAM':([0,],[2,]),'INTLITERAL':([66,71,74,75,78,79,87,88,91,92,93,94,95,96,97,102,108,109,110,116,117,118,120,127,134,],[-70,-70,-70,-70,-40,-70,-43,103,-68,-64,-66,-63,-67,-70,-65,-70,-56,-39,-55,-42,-57,-58,-70,-40,-70,]),'MINUS':([89,101,103,104,105,106,107,124,135,],[108,-41,-53,-45,-44,-52,-54,-51,-46,]),'COMM':([23,35,42,44,49,89,101,103,104,105,106,107,124,125,135,138,],[31,31,45,-17,45,-38,-41,-53,-45,-44,-52,-54,-51,134,-46,134,]),'R_PAR':([23,30,32,35,36,38,39,40,42,44,46,47,49,52,82,84,85,89,90,101,103,104,105,106,107,112,119,120,124,125,126,127,132,133,135,138,140,],[-70,-14,-12,-70,-70,-13,-16,43,-70,-17,-19,-15,-70,-18,98,99,100,-38,111,-41,-53,-45,-44,-52,-54,-62,124,-70,-51,-70,135,-48,-47,-50,-46,-70,-49,]),'WRITE':([6,10,12,18,21,29,37,48,50,54,55,57,59,62,65,68,69,73,86,98,99,113,114,115,121,128,129,136,137,],[-70,-5,-70,-4,-3,-7,-6,-70,67,-31,67,-27,-32,-29,-26,-28,-30,-33,-37,-70,-70,67,67,-35,-36,-69,-70,67,-59,]),'BEGIN':([3,43,],[4,48,]),'FLOAT':([4,6,12,17,29,36,37,45,48,98,99,129,],[11,11,11,11,-7,11,-6,11,11,11,11,11,]),'$end':([1,20,],[0,-1,]),'L_EQ':([81,89,101,103,104,105,106,107,124,135,],[95,-38,-41,-53,-45,-44,-52,-54,-51,-46,]),'FUNCTION':([4,5,6,10,12,15,18,21,29,37,70,],[-70,17,-70,-5,-70,17,-4,-3,-7,-6,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'postfix_expr':([88,],[101,]),'decl':([4,6,12,48,98,99,129,],[5,18,21,50,113,114,136,]),'mulop':([101,],[116,]),'var_decl':([4,6,12,48,98,99,129,],[6,6,6,6,6,6,6,]),'write_stmt':([50,55,113,114,136,],[54,54,54,54,54,]),'stmt':([50,55,113,114,136,],[55,55,55,55,55,]),'if_stmt':([50,55,113,114,136,],[57,57,57,57,57,]),'any_type':([17,],[26,]),'pgm_body':([4,],[9,]),'empty':([4,5,6,12,15,23,35,36,42,48,49,50,55,66,71,74,75,79,96,98,99,102,113,114,120,123,125,129,134,136,138,],[10,14,10,10,14,30,30,39,46,10,46,56,56,78,78,78,78,87,78,10,10,78,56,56,127,131,133,10,78,56,133,]),'assign_expr':([50,55,113,114,136,],[58,58,58,58,58,]),'addop':([89,],[109,]),'factor_prefix':([79,],[88,]),'return_stmt':([50,55,113,114,136,],[59,59,59,59,59,]),'param_decl_list':([36,],[40,]),'expr_list':([120,],[126,]),'cond':([71,75,],[82,84,]),'while_stmt':([50,55,113,114,136,],[68,68,68,68,68,]),'call_expr':([88,],[104,]),'string_decl':([4,6,12,48,98,99,129,],[12,12,12,12,12,12,12,]),'expr_prefix':([66,71,74,75,96,102,120,134,],[79,79,79,79,79,79,79,79,]),'expr_list_tail':([125,138,],[132,140,]),'func_body':([48,],[51,]),'assign_stmt':([50,55,113,114,136,],[62,62,62,62,62,]),'stmt_list':([50,55,113,114,136,],[63,72,122,123,139,]),'program':([0,],[1,]),'base_stmt':([50,55,113,114,136,],[65,65,65,65,65,]),'compop':([81,],[96,]),'id_tail':([23,35,],[32,38,]),'primary':([88,],[105,]),'factor':([79,],[89,]),'id_list':([13,76,80,],[22,85,90,]),'func_decl':([5,15,],[15,15,]),'else_part':([123,],[130,]),'expr':([66,71,74,75,96,102,120,134,],[77,81,83,81,112,119,125,138,]),'param_decl_tail':([42,49,],[47,52,]),'func_declarations':([5,15,],[16,24,]),'param_decl':([36,45,],[42,49,]),'read_stmt':([50,55,113,114,136,],[69,69,69,69,69,]),'var_type':([4,6,12,17,36,45,48,98,99,129,],[13,13,13,27,41,41,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM IDENTIFIER BEGIN pgm_body END','program',5,'p_program','parser.py',59),
  ('pgm_body -> decl func_declarations','pgm_body',2,'p_pgm_body','parser.py',68),
  ('decl -> string_decl decl','decl',2,'p_decl','parser.py',71),
  ('decl -> var_decl decl','decl',2,'p_decl','parser.py',72),
  ('decl -> empty','decl',1,'p_decl','parser.py',73),
  ('string_decl -> STRING IDENTIFIER EQ_EQ STRINGLITERAL SEMI','string_decl',5,'p_string_decl','parser.py',76),
  ('var_decl -> var_type id_list SEMI','var_decl',3,'p_var_decl','parser.py',81),
  ('var_type -> FLOAT','var_type',1,'p_var_type','parser.py',85),
  ('var_type -> INT','var_type',1,'p_var_type','parser.py',86),
  ('any_type -> var_type','any_type',1,'p_any_type','parser.py',90),
  ('any_type -> VOID','any_type',1,'p_any_type','parser.py',91),
  ('id_list -> IDENTIFIER id_tail','id_list',2,'p_id_list','parser.py',94),
  ('id_tail -> COMM IDENTIFIER id_tail','id_tail',3,'p_id_tail','parser.py',97),
  ('id_tail -> empty','id_tail',1,'p_id_tail','parser.py',98),
  ('param_decl_list -> param_decl param_decl_tail','param_decl_list',2,'p_param_decl_list','parser.py',102),
  ('param_decl_list -> empty','param_decl_list',1,'p_param_decl_list','parser.py',103),
  ('param_decl -> var_type IDENTIFIER','param_decl',2,'p_param_decl','parser.py',106),
  ('param_decl_tail -> COMM param_decl param_decl_tail','param_decl_tail',3,'p_param_decl_tail','parser.py',109),
  ('param_decl_tail -> empty','param_decl_tail',1,'p_param_decl_tail','parser.py',110),
  ('func_declarations -> func_decl func_declarations','func_declarations',2,'p_func_declarations','parser.py',113),
  ('func_declarations -> empty','func_declarations',1,'p_func_declarations','parser.py',114),
  ('func_decl -> FUNCTION any_type IDENTIFIER L_PAR param_decl_list R_PAR BEGIN func_body END','func_decl',9,'p_func_decl','parser.py',117),
  ('func_body -> decl stmt_list','func_body',2,'p_func_body','parser.py',122),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','parser.py',125),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','parser.py',126),
  ('stmt -> base_stmt','stmt',1,'p_stmt','parser.py',129),
  ('stmt -> if_stmt','stmt',1,'p_stmt','parser.py',130),
  ('stmt -> while_stmt','stmt',1,'p_stmt','parser.py',131),
  ('base_stmt -> assign_stmt','base_stmt',1,'p_base_stmt','parser.py',134),
  ('base_stmt -> read_stmt','base_stmt',1,'p_base_stmt','parser.py',135),
  ('base_stmt -> write_stmt','base_stmt',1,'p_base_stmt','parser.py',136),
  ('base_stmt -> return_stmt','base_stmt',1,'p_base_stmt','parser.py',137),
  ('assign_stmt -> assign_expr SEMI','assign_stmt',2,'p_assign_stmt','parser.py',140),
  ('assign_expr -> IDENTIFIER EQ_EQ expr','assign_expr',3,'p_assign_expr','parser.py',143),
  ('read_stmt -> READ L_PAR id_list R_PAR SEMI','read_stmt',5,'p_read_stmt','parser.py',146),
  ('write_stmt -> WRITE L_PAR id_list R_PAR SEMI','write_stmt',5,'p_write_stmt','parser.py',149),
  ('return_stmt -> RETURN expr SEMI','return_stmt',3,'p_return_stmt','parser.py',152),
  ('expr -> expr_prefix factor','expr',2,'p_expr','parser.py',155),
  ('expr_prefix -> expr_prefix factor addop','expr_prefix',3,'p_expr_prefix','parser.py',158),
  ('expr_prefix -> empty','expr_prefix',1,'p_expr_prefix','parser.py',159),
  ('factor -> factor_prefix postfix_expr','factor',2,'p_factor','parser.py',162),
  ('factor_prefix -> factor_prefix postfix_expr mulop','factor_prefix',3,'p_factor_prefix','parser.py',165),
  ('factor_prefix -> empty','factor_prefix',1,'p_factor_prefix','parser.py',166),
  ('postfix_expr -> primary','postfix_expr',1,'p_postfix_expr','parser.py',169),
  ('postfix_expr -> call_expr','postfix_expr',1,'p_postfix_expr','parser.py',170),
  ('call_expr -> IDENTIFIER L_PAR expr_list R_PAR','call_expr',4,'p_call_expr','parser.py',173),
  ('expr_list -> expr expr_list_tail','expr_list',2,'p_expr_list','parser.py',176),
  ('expr_list -> empty','expr_list',1,'p_expr_list','parser.py',177),
  ('expr_list_tail -> COMM expr expr_list_tail','expr_list_tail',3,'p_expr_list_tail','parser.py',180),
  ('expr_list_tail -> empty','expr_list_tail',1,'p_expr_list_tail','parser.py',181),
  ('primary -> L_PAR expr R_PAR','primary',3,'p_primary','parser.py',184),
  ('primary -> IDENTIFIER','primary',1,'p_primary','parser.py',185),
  ('primary -> INTLITERAL','primary',1,'p_primary','parser.py',186),
  ('primary -> FLOATLITERAL','primary',1,'p_primary','parser.py',187),
  ('addop -> PLUS','addop',1,'p_addop','parser.py',190),
  ('addop -> MINUS','addop',1,'p_addop','parser.py',191),
  ('mulop -> MULT','mulop',1,'p_mulop','parser.py',194),
  ('mulop -> DIV','mulop',1,'p_mulop','parser.py',195),
  ('if_stmt -> IF L_PAR cond R_PAR decl stmt_list else_part ENDIF','if_stmt',8,'p_if_stmt','parser.py',198),
  ('else_part -> ELSE decl stmt_list','else_part',3,'p_else_part','parser.py',201),
  ('else_part -> empty','else_part',1,'p_else_part','parser.py',202),
  ('cond -> expr compop expr','cond',3,'p_cond','parser.py',205),
  ('compop -> LESS','compop',1,'p_compop','parser.py',208),
  ('compop -> MORE','compop',1,'p_compop','parser.py',209),
  ('compop -> EQ','compop',1,'p_compop','parser.py',210),
  ('compop -> N_EQ','compop',1,'p_compop','parser.py',211),
  ('compop -> L_EQ','compop',1,'p_compop','parser.py',212),
  ('compop -> R_EQ','compop',1,'p_compop','parser.py',213),
  ('while_stmt -> WHILE L_PAR cond R_PAR decl stmt_list ENDWHILE','while_stmt',7,'p_while_stmt','parser.py',216),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',219),
]
