Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    BREAK
    CONTINUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM id BEGIN pgm_body END
Rule 2     id -> IDENTIFIER
Rule 3     pgm_body -> decl func_declarations
Rule 4     decl -> string_decl decl
Rule 5     decl -> var_decl decl
Rule 6     decl -> empty
Rule 7     string_decl -> STRING id EQ_EQ str SEMI
Rule 8     str -> STRINGLITERAL
Rule 9     var_decl -> var_type id_list SEMI
Rule 10    var_type -> FLOAT
Rule 11    var_type -> INT
Rule 12    any_type -> var_type
Rule 13    any_type -> VOID
Rule 14    id_list -> id id_tail
Rule 15    id_tail -> COMM id id_tail
Rule 16    id_tail -> empty
Rule 17    param_decl_list -> param_decl param_decl_tail
Rule 18    param_decl_list -> empty
Rule 19    param_decl -> var_type id
Rule 20    param_decl_tail -> COMM param_decl param_decl_tail
Rule 21    param_decl_tail -> empty
Rule 22    func_declarations -> func_decl func_declarations
Rule 23    func_declarations -> empty
Rule 24    func_decl -> FUNCTION any_type id L_PAR param_decl_list R_PAR BEGIN func_body END
Rule 25    func_body -> decl stmt_list
Rule 26    stmt_list -> stmt stmt_list
Rule 27    stmt_list -> empty
Rule 28    stmt -> base_stmt
Rule 29    stmt -> if_stmt
Rule 30    stmt -> while_stmt
Rule 31    base_stmt -> assign_stmt
Rule 32    base_stmt -> read_stmt
Rule 33    base_stmt -> write_stmt
Rule 34    base_stmt -> return_stmt
Rule 35    assign_stmt -> assign_expr SEMI
Rule 36    assign_expr -> id EQ_EQ expr
Rule 37    read_stmt -> READ L_PAR id_list R_PAR SEMI
Rule 38    write_stmt -> WRITE L_PAR id_list R_PAR SEMI
Rule 39    return_stmt -> RETURN expr SEMI
Rule 40    expr -> expr_prefix factor
Rule 41    expr_prefix -> expr_prefix factor addop
Rule 42    expr_prefix -> empty
Rule 43    factor -> factor_prefix postfix_expr
Rule 44    factor_prefix -> factor_prefix postfix_expr mulop
Rule 45    factor_prefix -> empty
Rule 46    postfix_expr -> primary
Rule 47    postfix_expr -> call_expr
Rule 48    call_expr -> id L_PAR expr_list R_PAR
Rule 49    expr_list -> expr expr_list_tail
Rule 50    expr_list -> empty
Rule 51    expr_list_tail -> COMM expr expr_list_tail
Rule 52    expr_list_tail -> empty
Rule 53    primary -> L_PAR expr R_PAR
Rule 54    primary -> id
Rule 55    primary -> INTLITERAL
Rule 56    primary -> FLOATLITERAL
Rule 57    addop -> PLUS
Rule 58    addop -> MINUS
Rule 59    mulop -> MULT
Rule 60    mulop -> DIV
Rule 61    if_stmt -> IF L_PAR cond R_PAR decl stmt_list else_part ENDIF
Rule 62    else_part -> ELSE decl stmt_list
Rule 63    else_part -> empty
Rule 64    cond -> expr compop expr
Rule 65    compop -> LESS
Rule 66    compop -> MORE
Rule 67    compop -> EQ
Rule 68    compop -> N_EQ
Rule 69    compop -> L_EQ
Rule 70    compop -> R_EQ
Rule 71    while_stmt -> WHILE L_PAR cond R_PAR decl stmt_list ENDWHILE
Rule 72    empty -> <empty>
Rule 73    statement -> PRINT expr SEMI

Terminals, with rules where they appear

BEGIN                : 1 24
BREAK                : 
COMM                 : 15 20 51
COMMENT              : 
CONTINUE             : 
DIV                  : 60
ELSE                 : 62
END                  : 1 24
ENDIF                : 61
ENDWHILE             : 71
EQ                   : 67
EQ_EQ                : 7 36
FLOAT                : 10
FLOATLITERAL         : 56
FUNCTION             : 24
IDENTIFIER           : 2
IF                   : 61
INT                  : 11
INTLITERAL           : 55
LESS                 : 65
L_EQ                 : 69
L_PAR                : 24 37 38 48 53 61 71
MINUS                : 58
MORE                 : 66
MULT                 : 59
N_EQ                 : 68
PLUS                 : 57
PROGRAM              : 1
READ                 : 37
RETURN               : 39
R_EQ                 : 70
R_PAR                : 24 37 38 48 53 61 71
SEMI                 : 7 9 35 37 38 39 73
STRING               : 7
STRINGLITERAL        : 8
VOID                 : 13
WHILE                : 71
WRITE                : 38
error                : 

Nonterminals, with rules where they appear

PRINT                : 73
addop                : 41
any_type             : 24
assign_expr          : 35
assign_stmt          : 31
base_stmt            : 28
call_expr            : 47
compop               : 64
cond                 : 61 71
decl                 : 3 4 5 25 61 62 71
else_part            : 61
empty                : 6 16 18 21 23 27 42 45 50 52 63
expr                 : 36 39 49 51 53 64 64 73
expr_list            : 48
expr_list_tail       : 49 51
expr_prefix          : 40 41
factor               : 40 41
factor_prefix        : 43 44
func_body            : 24
func_decl            : 22
func_declarations    : 3 22
id                   : 1 7 14 15 19 24 36 48 54
id_list              : 9 37 38
id_tail              : 14 15
if_stmt              : 29
mulop                : 44
param_decl           : 17 20
param_decl_list      : 24
param_decl_tail      : 17 20
pgm_body             : 1
postfix_expr         : 43 44
primary              : 46
program              : 0
read_stmt            : 32
return_stmt          : 34
statement            : 
stmt                 : 26
stmt_list            : 25 26 61 62 71
str                  : 7
string_decl          : 4
var_decl             : 5
var_type             : 9 12 19
while_stmt           : 30
write_stmt           : 33

